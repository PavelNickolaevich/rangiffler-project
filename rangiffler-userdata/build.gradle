plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'guru.qa'
version = '1.1.0'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.kafka:spring-kafka:${project.ext.springKafkaVersion}"
    implementation "org.springframework.cloud:spring-cloud-starter-vault-config:${project.ext.springVaultVersion}"
    implementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
    implementation "wsdl4j:wsdl4j:${project.ext.wsdl4jVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    runtimeOnly "org.postgresql:postgresql:${project.ext.postgresDriverVersion}"
//    jaxb("org.glassfish.jaxb:jaxb-xjc:${project.ext.glassfishJaxbVersion}")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.register('printVersion') {
    doLast {
        println project.version
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
